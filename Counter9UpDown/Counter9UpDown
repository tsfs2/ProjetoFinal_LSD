library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
  
entity Counter9UpDown is
    Port ( clk: 	  in std_logic;
			  enable:  in std_logic;
           reset:   in std_logic;
           up_down: in std_logic;
           counter: out std_logic_vector(8 downto 0));
end Counter9UpDown;

architecture Behavioral of Counter9UpDown is
signal s_counter: integer range 0 to 511;
	--signal s_counter:std_logic_vector(8 downto 0);
begin

process(clk)
begin

if (rising_edge(clk))then
	if(enable='0')then
		s_counter<=s_counter;
	elsif(reset='1')then
			--s_counter<=(others=>'0');
			  s_counter<=0;
			elsif(up_down='1')then
					--s_counter<=std_logic_vector(unsigned(s_counter) + 1);
					  s_counter<=s_counter+1;
				else
					--s_counter<=std_logic_vector(unsigned(s_counter) -1);
					  s_counter<=s_counter-1;
				end if;
		end if;
end process;

--
--
--
--
--if(rising_edge(clk)) then
--	if(enable='1') then
--		if(reset='1') then
--         s_counter <=0;
--			elsif(up_down='0') then
--         s_counter <= s_counter + 1;
--			else 
--			s_counter <= s_counter - 1;
--			end if;
--		else
--	 s_counter<=0;
--else
--s_counter<=s_counter;
--		end if; 
--end if;
--end process;
--
--
--
--

 counter <= std_logic_vector(to_unsigned (s_counter,9));
 --counter<=s_counter;

end Behavioral;
