library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;

entity divFreq is

port (acel	 : in std_logic_vector (1 downto 0);
		clkIn  : in std_logic;
		clkOut : out std_logic);
end divFreq;

architecture compDivFreq of divFreq is
signal valorDiv : natural;
signal s_divCont : natural;

begin

	process(clkIn)
	begin
		if (rising_edge(clkIn)) then
			if (acel = "01") then
				valorDiv <= 208333;
			elsif (acel = "10") then
				valorDiv <= 20833;
			elsif (acel = "11") then
				valorDiv <= 3472;
			else
				valorDiv <= 12500000;	
			end if;
			
			if (s_divCont = valorDiv - 1) then
				clkOut		 <= '0';
				s_divCont <= 0;
			else
				if (s_divCont = (valorDiv / 2 - 1)) then
					clkOut	 <= '1';
				end if;
				s_divCont <= s_divCont + 1;
			end if;
		end if;
		
	end process;
end compDivFreq;	
